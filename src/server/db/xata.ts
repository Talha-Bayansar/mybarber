// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "nextauth_verificationToken",
    columns: [
      { name: "identifier", type: "string" },
      { name: "token", type: "string" },
      { name: "expires", type: "datetime" },
    ],
  },
  {
    name: "nextauth_user",
    columns: [
      { name: "email", type: "email" },
      { name: "emailVerified", type: "datetime" },
      { name: "name", type: "string" },
      { name: "image", type: "string" },
    ],
    revLinks: [
      { column: "user", table: "nextauth_account" },
      { column: "user", table: "nextauth_user_account" },
      { column: "user", table: "nextauth_user_session" },
      { column: "user", table: "nextauth_session" },
      { column: "user", table: "favorite_barbershop" },
    ],
  },
  {
    name: "nextauth_account",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_user" } },
      { name: "type", type: "string" },
      { name: "provider", type: "string" },
      { name: "providerAccountId", type: "string" },
      { name: "refresh_token", type: "string" },
      { name: "access_token", type: "string" },
      { name: "expires_at", type: "int" },
      { name: "token_type", type: "string" },
      { name: "scope", type: "string" },
      { name: "id_token", type: "text" },
      { name: "session_state", type: "string" },
    ],
    revLinks: [{ column: "account", table: "nextauth_user_account" }],
  },
  {
    name: "nextauth_user_account",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_user" } },
      { name: "account", type: "link", link: { table: "nextauth_account" } },
    ],
  },
  {
    name: "nextauth_user_session",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_user" } },
      { name: "session", type: "link", link: { table: "nextauth_session" } },
    ],
  },
  {
    name: "nextauth_session",
    columns: [
      { name: "sessionToken", type: "string" },
      { name: "expires", type: "datetime" },
      { name: "user", type: "link", link: { table: "nextauth_user" } },
    ],
    revLinks: [{ column: "session", table: "nextauth_user_session" }],
  },
  {
    name: "barbershop",
    columns: [
      { name: "name", type: "string" },
      { name: "phone_number", type: "string" },
      { name: "email", type: "email" },
      { name: "verified", type: "bool" },
      { name: "address", type: "link", link: { table: "address" } },
      { name: "logo", type: "file", file: { defaultPublicAccess: true } },
    ],
    revLinks: [{ column: "barbershop", table: "favorite_barbershop" }],
  },
  {
    name: "address",
    columns: [
      { name: "street", type: "string" },
      { name: "house_number", type: "string" },
      { name: "zip", type: "string" },
      { name: "city", type: "string" },
    ],
    revLinks: [{ column: "address", table: "barbershop" }],
  },
  {
    name: "favorite_barbershop",
    columns: [
      { name: "user", type: "link", link: { table: "nextauth_user" } },
      { name: "barbershop", type: "link", link: { table: "barbershop" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type NextauthVerificationToken =
  InferredTypes["nextauth_verificationToken"];
export type NextauthVerificationTokenRecord = NextauthVerificationToken &
  XataRecord;

export type NextauthUser = InferredTypes["nextauth_user"];
export type NextauthUserRecord = NextauthUser & XataRecord;

export type NextauthAccount = InferredTypes["nextauth_account"];
export type NextauthAccountRecord = NextauthAccount & XataRecord;

export type NextauthUserAccount = InferredTypes["nextauth_user_account"];
export type NextauthUserAccountRecord = NextauthUserAccount & XataRecord;

export type NextauthUserSession = InferredTypes["nextauth_user_session"];
export type NextauthUserSessionRecord = NextauthUserSession & XataRecord;

export type NextauthSession = InferredTypes["nextauth_session"];
export type NextauthSessionRecord = NextauthSession & XataRecord;

export type Barbershop = InferredTypes["barbershop"];
export type BarbershopRecord = Barbershop & XataRecord;

export type Address = InferredTypes["address"];
export type AddressRecord = Address & XataRecord;

export type FavoriteBarbershop = InferredTypes["favorite_barbershop"];
export type FavoriteBarbershopRecord = FavoriteBarbershop & XataRecord;

export type DatabaseSchema = {
  nextauth_verificationToken: NextauthVerificationTokenRecord;
  nextauth_user: NextauthUserRecord;
  nextauth_account: NextauthAccountRecord;
  nextauth_user_account: NextauthUserAccountRecord;
  nextauth_user_session: NextauthUserSessionRecord;
  nextauth_session: NextauthSessionRecord;
  barbershop: BarbershopRecord;
  address: AddressRecord;
  favorite_barbershop: FavoriteBarbershopRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Talha-Bayansar-s-workspace-l2p3gj.eu-central-1.xata.sh/db/my-barber",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
